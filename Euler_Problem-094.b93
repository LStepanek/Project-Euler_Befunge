"}}2( "****04003pp201p102p>04g01g2*`#v_v
Xv2*2g10**!%3*g20-2g10!-1%3*g102`2g10< 0
X>-*03g+03p01g2*3%2-!01g2+# 02g*3%v    3
Xv*2g10+*2g20g10p30+g30*+* g1022*!< @.g<
C>02g3*+01p02p            ^


#$watch[0,1]:int = x
#$watch[0,2]:int = y
#$watch[0,3]:int = result

[0,4] 1,000,000,000  => "}}2( "****


---------------------------------------

Nothing much to say about this one, we play a bit with the triangle formulas until we reach something that looks like a [Pell equation](https://en.wikipedia.org/wiki/Pell%27s_equation).
My approach is basically the same as the one on [mathblog.dk](http://www.mathblog.dk/project-euler-94-almost-equilateral-triangles/), but he explains it better.
(And I improved my approach a bit after I read his article, his math skills are pretty good :D).

The code is in a way interesting because it only has a single conditional operator.
I could remove two conditional by multiplying the increment with the normalized condition (`0`|`1`).
This way `if (condition) { x += increment; }` becomes ` x +=  (int)(condition) * increment`, 
which is a neat way to safe a bit of space in our program (and the resulting 40x5 code is pretty compact)