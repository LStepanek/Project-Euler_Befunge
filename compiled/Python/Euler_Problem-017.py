# compiled with BefunCompile v1.0.1 (c) 2015
# execute with at least Python3
from random import randint
g=[[118,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32],[48,51,51,53,52,52,51,53,53,52,51,54,54,56,56,55,55,57,56,56,54,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32],[48,51,54,54,53,53,53,55,54,54,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32],[36,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32],[36,32,32,32,118,45,49,32,32,32,32,32,32,32,32,32,32,32,60,32,32,32,32,118,45,49,32,32,32,32,32,32,32,32,32,32,60,32,32,32,32,32,32,32,32,32,32,32],[62,53,52,42,62,58,58,58,49,103,34,48,34,45,92,49,112,35,94,95,53,52,42,62,58,58,58,50,103,34,48,34,45,92,50,112,124,32,32,32,32,32,32,32,32,32,32,32],[118,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,42,42,50,53,34,100,34,32,48,32,36,36,60,32,32,32,32,32,32,32,32,32,32,32],[118,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,60],[32,32,32,118,32,32,32,32,32,32,32,32,32,32,32,32,36,60,32,32,32,62,58,53,53,43,47,50,103,92,53,53,43,37,32,32,32,32,32,32,32,32,32,32,32,118,32,32],[58,32,32,32,32,32,32,32,32,32,32,32,32,32,32,62,58,53,52,42,96,124,32,32,32,32,32,32,32,32,32,62,34,100,34,47,49,103,55,48,32,32,32,32,32,118,32,32],[62,48,92,62,58,33,35,118,95,58,34,100,34,92,96,124,32,94,48,103,49,60,32,32,62,58,34,100,34,37,33,124,32,32,32,32,32,32,32,32,118,32,32,32,32,60,32,32],[118,32,32,32,32,32,32,60,32,32,32,32,32,32,32,62,58,34,125,34,56,42,45,35,94,95,36,51,56,48,118,62,58,34,100,34,47,49,103,92,32,34,100,34,37,118,32,32],[32,32,32,94,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,60,32,32,32,32,32,32,32,32,32,60,92,51,92,55,60,32,32],[62,43,35,32,92,58,35,32,95,43,32,32,32,32,32,32,32,32,32,32,92,32,49,45,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,58,124],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,64,46,43,95,32,35,33,32,35,58,92,32,35,43,60]];
def gr(x,y):
    if(x>=0 and y>=0 and x<48 and y<15):
        return g[y][x];
    return 0;
def gw(x,y,v):
    if(x>=0 and y>=0 and x<48 and y<15):
        g[y][x]=v;
def rd():
    return bool(random.getrandbits(1))
def td(a,b):
    return bool(random.getrandbits(1))
def td(a,b):
    return ((0)if(b==0)else(a//b))
def tm(a,b):
    return ((0)if(b==0)else(a%b))
s=[]
def sp():
    global s
    if (len(s) == 0):
        return 0
    return s.pop()
def sa(v):
    global s
    s.append(v)
def sr():
    global s
    if (len(s) == 0):
        return 0
    return s[-1]
def _0():
    return (30)if(sp()!=0)else(11)
def _1():
    return (29)if(sp()!=0)else(12)
def _2():
    return (13)if(sp()!=0)else(20)
def _3():
    return (14)if(sp()!=0)else(15)
def _4():
    return (16)if(sp()!=0)else(17)
def _5():
    return (19)if(sp()!=0)else(18)
def _6():
    return (26)if(sp()!=0)else(21)
def _7():
    return (28)if(sp()!=0)else(27)
def _8():
    return (22)if(sp()!=0)else(25)
def _9():
    return (24)if(sp()!=0)else(23)
def _10():
    gw(20,1,(gr(20,1))-(48))
    sa(20)
    sa(20)
    return 0
def _11():
    gw(20,2,(gr(20,2))-(48))
    sa(20)
    sa(20)
    return 1
def _12():
    sp()
    sp()
    sa(0)
    sa(1000)
    sa(0)
    sa(1000)
    sa(0)
    return 2
def _13():
    sa(sp()+sp());
    v0=sp()
    v1=sp()
    sa(v0)
    sa(v1)
    sa(sr())
    return 3
def _14():
    v0=sp()
    v1=sp()
    sa(v0)
    sa(v1)
    return 13
def _15():
    sa(sp()+sp());
    v0=sp()
    v1=sp()
    sa(v0)
    sa(v1)
    sa(1)
    v0=sp()
    sa(sp()-v0)
    sa(sr())
    return 4
def _16():
    sa(sr())
    sa(0)
    v0=sp()
    v1=sp()
    sa(v0)
    sa(v1)
    sa(sr())
    sa((0)if(sp()!=0)else(1))
    return 2
def _17():
    sa(sp()+sp());
    v0=sp()
    v1=sp()
    sa(v0)
    sa(v1)
    sa(sr())
    sa((0)if(sp()!=0)else(1))
    return 5
def _18():
    v0=sp()
    v1=sp()
    sa(v0)
    sa(v1)
    return 17
def _19():
    sa(sp()+sp());
    print(sp(),end="",flush=True)
    return 31
def _20():
    sa(sr())
    sa(100)
    v0=sp()
    v1=sp()
    sa(v0)
    sa(v1)
    v0=sp()
    sa((1)if(sp()>v0)else(0))
    return 6
def _21():
    sa(sr())
    sa(1000)
    v0=sp()
    sa(sp()-v0)
    return 8
def _22():
    sa(sr())
    sa(100)
    v0=sp()
    sa(tm(sp(),v0))
    sa((0)if(sp()!=0)else(1))
    return 9
def _23():
    sa(sr())
    sa(100)
    v0=sp()
    sa(td(sp(),v0))
    sa(1)
    v0=sp()
    sa(gr(sp(),v0))
    v0=sp()
    v1=sp()
    sa(v0)
    sa(v1)
    sa(100)
    v0=sp()
    sa(tm(sp(),v0))
    sa(7)
    v0=sp()
    v1=sp()
    sa(v0)
    sa(v1)
    sa(3)
    v0=sp()
    v1=sp()
    sa(v0)
    sa(v1)
    sa(sr())
    sa((0)if(sp()!=0)else(1))
    return 2
def _24():
    sa(100)
    v0=sp()
    sa(td(sp(),v0))
    sa(1)
    v0=sp()
    sa(gr(sp(),v0))
    sa(7)
    sa(0)
    sa(1)
    return 2
def _25():
    sp()
    sa(3)
    sa(8)
    sa(0)
    sa(1)
    return 2
def _26():
    sa(sr())
    sa(20)
    v0=sp()
    sa((1)if(sp()>v0)else(0))
    return 7
def _27():
    sa(1)
    v0=sp()
    sa(gr(sp(),v0))
    sa(0)
    sa(1)
    return 2
def _28():
    sa(sr())
    sa(10)
    v0=sp()
    sa(td(sp(),v0))
    sa(2)
    v0=sp()
    sa(gr(sp(),v0))
    v0=sp()
    v1=sp()
    sa(v0)
    sa(v1)
    sa(10)
    v0=sp()
    sa(tm(sp(),v0))
    sa(sr())
    sa((0)if(sp()!=0)else(1))
    return 2
def _29():
    sa(1)
    v0=sp()
    sa(sp()-v0)
    sa(sr())
    sa(sr())
    sa(sr())
    sa(2)
    v0=sp()
    sa(gr(sp(),v0))
    sa(48)
    v0=sp()
    sa(sp()-v0)
    v0=sp()
    v1=sp()
    sa(v0)
    sa(v1)
    sa(2)
    v0=sp()
    v1=sp()
    gw(v1,v0,sp())
    return 1
def _30():
    sa(1)
    v0=sp()
    sa(sp()-v0)
    sa(sr())
    sa(sr())
    sa(sr())
    sa(1)
    v0=sp()
    sa(gr(sp(),v0))
    sa(48)
    v0=sp()
    sa(sp()-v0)
    v0=sp()
    v1=sp()
    sa(v0)
    sa(v1)
    sa(1)
    v0=sp()
    v1=sp()
    gw(v1,v0,sp())
    return 0
m=[_0,_1,_2,_3,_4,_5,_6,_7,_8,_9,_10,_11,_12,_13,_14,_15,_16,_17,_18,_19,_20,_21,_22,_23,_24,_25,_26,_27,_28,_29,_30]
c=10
while c<31:
    c=m[c]()