v $$ T # #######################################################################
       # #######################################################################
  XX   # #######################################################################
       # #######################################################################
       # #######################################################################
       # #######################################################################
       # #######################################################################
       # #######################################################################

 v                                   p1*93"Y" p0+551 $<
> "G"8*:32p"}2(("***22p020p030p  >1-:0\:"G"%9+\"G"/p:!|
             v     pp02+1:g027:$<^            >#   v# <
 >22g:>:32g`#v_::"G"%9+\"G"/g:!#^_:"Y"-!#v_:1-|    #   >1-:20p7\g50g\:  v
             >0\>:55+%:*\ :#v_$$11v>30g1+  30p>50p$20g:|:g02p/"G"\+9%"G"<
        >3     v^/+55g05+p05< >$@  ^     <     v1:: -1$<
      ^_^#  _^#># 0# g# .# $# ^#  <            < *0<



#$watch[2,0]:int = hPointer
#$watch[3,0]:int = counter01

[5,0] temp

[2,2] SIZE      = 10_000_000     => "}2))"***
[3,2] CACHESIZE = 8 * 71 = 568   => "G"8*

[7     , 0..7] history
[9..79 , 0..7] cache


71  =>  "G"
89  =>  "Y"

GetNextNumber() ->        0\>:55+%:*\ :#v_$$
                            ^/+55g05+p05<   


---------------------------------------

My approach to this problem is pretty crude. Perhaps I will later come back and try to find a better algorithm.
Currently we iterate (brute-force) through all possible numbers and count the chains that end with one.
The `next()` function is implemented like this:

~~~~~~~~~~~~~~~~~~~
0\>:55+%:*\ :#v_$$
  ^/+55g05+p05<   
~~~~~~~~~~~~~~~~~~~

We also remember in an 8x71 cache all previously found numbers so we can abort some sequences before we reach `1` or `89`.
This is the main optimization from pure brute-force in this program.

We can prove that an 568-element cache is enough because no number in the sequence (except the first) can be greater than `9^2 * 7` (` = 567`)