v
033544355436688779886                     // 1-20    +=1
0366555766                                // 10-90   +=10
$
$   v-1           <    v-1          <     // Init
>54*>:::1g"0"-\1p#^_54*>:::2g"0"-\2p|
v                       **25"d" 0 $$<
v                                              <
   v            $<   >:55+/2g\55+%           v      
:              >:54*`|         >"d"/1g70     v      
>0\>:!#v_:"d"\`| ^0g1<  >:"d"%!|        v    <     
v      <       >:"}"8*-#^_$380v>:"d"/1g\ "d"%v  
   ^                          <         <\3\7< 
>+# \:# _+          \ 1-                      :|
                                 @.+_ #! #:\ #+<


---------------------------------------

There are only N kinds of numbers: 
  - `0` - `20`: Get the length from a precomputed list
  - `20` - `99`: Get the length of the first word from a precomputed list and the length of the second word (second digit) from the previous point
  - `100` - `999`: Get the length of the first word from a precomputed list and the length of the second and third word (second digit) from the previous point
  - `1000`: Get the hard coded value

*Note*: Interestingly this program operates completely on the stack - only the initializing method sets a few "constant fields" to per-definied values